{"version":3,"sources":["firebaseConfig.js","components/authentication/authentication.js","components/mainscreen/mainscreen.js","components/header.js","components/menu.js","components/mainscreen/todoList.js","components/mainscreen/todoInfo.js","components/mainscreen/coworker.js","components/mainscreen/person.js","components/mainscreen/record.js","components/mainscreen/event.js","components/mainscreen/recordList.js","components/mainscreen/eventList.js","components/mainscreen/eventProcess.js","components/mainscreen/eventInputForm.js","components/mainscreen/notification.js","components/mainscreen/notificationManager.js","routes/login.js","routes/App.js","routes/register.js","routes/odot.js","routes/todo.js","App.js","serviceWorker.js","index.js"],"names":["config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createHashHistory","firebase","length","firebaseConfig","timerId","database","Authentication","state","id","pw","name","teamName","mode","btn2","handleRight","$","removeClass","css","color","addClass","setState","handleLeft","handle","handleChange","e","nextState","target","value","handleRegister","ref","set","then","response","console","log","catch","error","handleLogin","once","snapshot","loginFlag","res","val","getId","getPw","getName","getTeamName","props","history","push","pathname","handleKeyPress","charCode","handleSpinner","click","preventDefault","stopPropagation","this","toggleClass","attr","prop","document","inputBoxes","class","type","className","onChange","onKeyPress","placeholder","onClick","inputBoxes2","loginView","registerView","ready","fadeIn","Component","Header","fileonClick","uploadonClick","mypageonClick","handleUploadClick","handleFileClick","handleMyPageClick","Menu","connect","options","label","Mainscreen","handleTimer","setInterval","noti_flag","noti_title","noti_page","noti_time","handleDaily","currentTab","handleEvent","handleRecord","handleEventInput","handleSetting","notiChange","selectedOption","clearInterval","selected","checked","alarm_flag","data","noti_change","bind","nextProps","prevProps","prevState","dailyScheduler","isCoworker","eventScheduler","recordScheduler","style","width","uncheckedIcon","checkedIcon","offColor","onColor","height","handler","coworkerHandler","TodoList","border","padding","margin","onUpdate","onRemove","onLikey","map","clickID","TodoInfo","toggle","task","duetime","progress","Number","index","likey","heartFlag","handleChange2","timeChange","handleToggleChange","handleRemove","handleLikey","tempLikey","increment","newProgress","incrementFull","decrement","decrementFull","TimeInput","TextField","InputLabelProps","shrink","size","progressInput","ProgressExampleAttached","autoFocus","Segment","Progress","percent","indicating","Coworker","coworkerList","flag","_getCoworker","tempThis","forEach","child","key","snapshot2","update","$push","position","overflowY","overflowX","Person","handleClicked","personWithProgress","CircularProgress","variant","thickness","Record","RecordList","_getDailyList","question","answer","isMine","Event","QuestionList","EventList","today","moment","format","childKey","quesitionStyle","returnVal","answerList","getAnswerList","myanswerList","Object","keys","EventProcess","location","EventInputForm","open","handleClose","handleSubmit","window","href","localStorage","getItem","replace","handleKeyDown","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","Notification","handleNoti","setItem","title","timeout","body","tag","badge","NotificationManager","currentTime","event_flag","event_index","time","_periodicTimeUpdate","sec","_findAskIndex","result","elem","i","Login","App2","isAuth","test","undefined","Odot","coworkerData","handleShowCoworker","_data","backgroundColor","Todo","isSaved","handleUpdate","islikey","t_this","remove","filter","handleAllSave","scrollToBottom","animateScroll","containerId","numChildren","limitToLast","newPost","idx","concat","handleCreate","App","exact","path","component","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.3e041095.chunk.js","sourcesContent":["const config = {\r\n    apiKey: \"AIzaSyB6DKsMhj2njwpNl8cGeQ0mVYNj7G-8kWo\",\r\n    authDomain: \"cs374-2020cc.firebaseapp.com\",\r\n    databaseURL: \"https://cs374-2020cc.firebaseio.com\",\r\n    projectId: \"cs374-2020cc\",\r\n    storageBucket: \"cs374-2020cc.appspot.com\",\r\n    messagingSenderId: \"856963465670\",\r\n    appId: \"1:856963465670:web:d6f0f39bb379442e47f2c7\",\r\n    measurementId: \"G-8S8XM9TX1F\"\r\n};\r\nexport default config;","import React, { Component } from 'react';\r\nimport '../../login.css';\r\nimport $ from 'jquery';\r\nimport '../../spinner.scss';\r\nimport * as firebase from \"firebase/app\";\r\nimport \"firebase/database\";\r\nimport firebaseConfig from \"../../firebaseConfig\";\r\nimport { createHashHistory } from 'history';\r\nexport const history = createHashHistory();\r\n\r\nif(!firebase.apps.length) {\r\n    firebase.initializeApp(firebaseConfig);\r\n}\r\n\r\nconst database = firebase.database();\r\n\r\nclass Authentication extends Component {\r\n    state = {\r\n      id:\"\",\r\n      pw:\"\",\r\n      name : \"\",\r\n      teamName : \"\",\r\n      mode : true,\r\n      btn2 : true\r\n    }\r\n\r\n    handleRight = () => {\r\n        $(\"#left\").removeClass(\"left_hover\");\r\n        $(\".login-s2class\").css({ color: \"#53adcb\" });\r\n        $(\".login-s1class\").css({ color: \"#748194\" });\r\n        $(\"#right\").addClass(\"right_hover\");\r\n        this.setState({\r\n            mode : false\r\n        })\r\n    }\r\n     \r\n    handleLeft = () => {\r\n        $(\".login-s1class\").css({ color: \"#53adcb\" });\r\n        $(\".login-s2class\").css({ color: \"#748194\" });\r\n        $(\"#right\").removeClass(\"right_hover\");\r\n        $(\"#left\").addClass(\"left_hover\");\r\n        this.setState({\r\n            mode : true\r\n        })\r\n    }\r\n    \r\n    handle = () => {\r\n        $(\".login-s1class\").css({ color: \"#EE9BA3\" });\r\n        $(\".login-s2class\").css({ color: \"#748194\" });\r\n        $(\"#right\").removeClass(\"right_hover\");\r\n        $(\"#left\").addClass(\"left_hover\");\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        let nextState = {};\r\n        nextState[e.target.name] = e.target.value;\r\n        this.setState(nextState);\r\n    }\r\n \r\n    handleRegister = () => {\r\n        let id = this.state.id;\r\n        let pw = this.state.pw;\r\n        let name = this.state.name;\r\n        let teamName = this.state.teamName;\r\n\r\n        database.ref('authentication/' + id).set({\r\n            id :id,\r\n            pw : pw,\r\n            name : name,\r\n            teamName : teamName\r\n        }).then((response) => {\r\n            // console.log(response);\r\n            console.log('register success');\r\n            this.setState({\r\n                id: '',\r\n                pw: '',\r\n                name : '',\r\n                teamName : '2020cc', //default\r\n                mode : true\r\n            });\r\n        }).catch((error) => {\r\n            this.setState({\r\n                id: '',\r\n                pw: '',\r\n                name : '',\r\n                teamName : '2020cc', //default\r\n                mode : false\r\n            });\r\n        });\r\n    }\r\n  \r\n    handleLogin = () => {\r\n        let id = this.state.id;\r\n        let pw = this.state.pw;\r\n \r\n        database.ref('authentication/' + id).once('value').then((snapshot) => {\r\n            let loginFlag = 0;\r\n            const res = snapshot.val();\r\n            const getId = res.id;\r\n            const getPw = res.pw;\r\n            const getName = res.name;\r\n            const getTeamName = res.teamName;\r\n            if(getId === id && getPw === pw) {\r\n                //login success\r\n                loginFlag =1;\r\n                console.log('login success');\r\n                this.props.history.push({\r\n                    pathname : '/CS374-2020cc/Odot',\r\n                    state : {\r\n                        id: getId,\r\n                        name: getName,\r\n                        teamName: getTeamName\r\n                    }\r\n                }); \r\n\r\n            } \r\n            if(loginFlag === 0) {\r\n                //login Fail\r\n                console.log('login fail');\r\n                this.setState({\r\n                    id: '',\r\n                    pw: '', //default\r\n                });\r\n            }\r\n            \r\n        }).catch((error) => {\r\n            console.log(error);\r\n            this.setState({\r\n                id: '',\r\n                pw: '',//default\r\n            });\r\n        });\r\n    }\r\n\r\n    handleKeyPress = (e) => {\r\n        if(e.charCode===13) {\r\n            if(this.props.mode) {\r\n                this.handleLogin();\r\n            } else {\r\n                this.handleRegister();\r\n            }\r\n        }\r\n    }\r\n\r\n    handleSpinner=()=>{\r\n         $(\"#spinner\").click(function(e) {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            $(this).toggleClass('expanded');\r\n            $('#'+$(e.target).attr('for')).prop('checked',true);\r\n            });\r\n            $(document).click(function() {\r\n            $('.dropdown-el').removeClass('expanded');\r\n            });\r\n    }\r\n \r\n    render() {\r\n        console.log('render');\r\n        console.log(this.state.id);\r\n        console.log(this.state.pw);\r\n        const inputBoxes = (\r\n            <div>\r\n                <form class=\"signin\">\r\n                    <h1 class=\"signup1\">SIGN IN</h1>\r\n                    <br></br><br></br>\r\n                    <input\r\n                    name=\"id\"\r\n                    type=\"text\"\r\n                    className=\"login-username\"\r\n                    onChange={this.handleChange}\r\n                    value={this.state.id}\r\n                    onKeyPress={this.handleKeyPress}\r\n                    placeholder=\"ID*\"/>\r\n                    <input\r\n                    name=\"pw\"\r\n                    type=\"password\"\r\n                    className=\"login-username\"\r\n                    onChange={this.handleChange}\r\n                    value={this.state.pw}\r\n                    onKeyPress={this.handleKeyPress}\r\n                    placeholder=\"password*\"/>\r\n                    <br></br><br></br>\r\n                    <a class=\"btn1\"\r\n                    onClick={this.handleLogin}>Get Started</a>\r\n                </form>\r\n            </div>\r\n        );\r\n\r\n        const inputBoxes2 = (\r\n            <div>\r\n                <form class=\"signup\">\r\n                    <h1 class=\"signup1\">SIGN UP</h1>\r\n                    <br></br><br></br>\r\n                    <input\r\n                    name=\"id\"\r\n                    type=\"text\"\r\n                    className=\"login-username\"\r\n                    onChange={this.handleChange}\r\n                    value={this.state.id}\r\n                    onKeyPress={this.handleKeyPress}\r\n                    placeholder=\"ID*\"/>\r\n                    <input\r\n                    name=\"pw\"\r\n                    type=\"password\"\r\n                    className=\"login-username\"\r\n                    onChange={this.handleChange}\r\n                    value={this.state.pw}\r\n                    onKeyPress={this.handleKeyPress}\r\n                    placeholder=\"password*\"/>\r\n                    <input\r\n                    name=\"name\"\r\n                    type=\"text\"\r\n                    className=\"login-username\"\r\n                    onChange={this.handleChange}\r\n                    value={this.state.name}\r\n                    onKeyPress={this.handleKeyPress}\r\n                    placeholder=\"name*\"/>\r\n                    <input\r\n                    name=\"teamName\"\r\n                    type=\"text\"\r\n                    className=\"login-username\"\r\n                    onChange={this.handleChange}\r\n                    value={this.state.teamName}\r\n                    onKeyPress={this.handleKeyPress}\r\n                    placeholder=\"teamName*\"/>\r\n                \r\n                    <div>{this.btn2?null:<a class=\"btn2\" id=\"btn2\"\r\n                    onClick={this.handleRegister}>Sign Up</a>}\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n\r\n        const loginView = ( \r\n            <div class=\"login-c2\">\r\n                {inputBoxes}\r\n            </div>\r\n        );\r\n \r\n        const registerView = (\r\n            <div class=\"login-c2\">\r\n                {inputBoxes2}\r\n            </div>\r\n            \r\n        );\r\n        \r\n        $(document).ready(function() {\r\n            $(\".login-container\").fadeIn(0);\r\n         });\r\n         \r\n        return (\r\n        <div class=\"login-container\">\r\n            <div class=\"login-c1\">\r\n            <div class=\"c11\">\r\n            </div>\r\n                    <div id=\"left\" onClick = {this.handleLeft}><h1 class=\"login-s1class\"><span>SIGN</span><span class=\"su\">IN</span></h1></div>\r\n                    <div id=\"right\" onClick = {this.handleRight}> <h1 class=\"login-s2class\"><span>SIGN</span><span class=\"su\">UP</span></h1></div>    \r\n            </div>\r\n                {this.state.mode ? loginView : registerView }\r\n        </div>\r\n        );  \r\n    }\r\n}\r\n\r\nexport default Authentication;\r\n","import React, { Component } from 'react';\r\nimport { Coworker, Record, Event, EventInputForm, NotificationManager } from '..';\r\nimport '../../mainscreen.css';\r\nimport { Todo } from '../../routes';\r\nimport Switch from 'react-switch';\r\nimport { Notification } from '..';\r\nimport Select from 'react-select'\r\n\r\nvar timerId;\r\n\r\nconst options = [\r\n\t{ value: '1', label: '1h' },\r\n\t{ value: '2', label: '2h' },\r\n\t{ value: '3', label: '3h' },\r\n  ];\r\n\r\nclass Mainscreen extends Component {\r\n\tconstructor(props){\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\tdata : this.props.data,\r\n\t\t\tcurrentTab : \"Todo\",\r\n\t\t\tnoti_time : 0.2,\r\n\t\t\tnoti_flag: false,\r\n\t\t\tnoti_title : \"\",\r\n\t\t\tnoti_page : \"\",\r\n\t\t\talarm_flag : true,\t\t\r\n\t\t\tnoti_change : 0\t,\r\n\t\t\tselected : \"\"\r\n\t\t}\r\n\t\tthis.notiChange = this.notiChange.bind(this)\r\n\t\tthis.handleChange = this.handleChange.bind(this)\r\n\t}\r\n\t\r\n\thandleTimer = (value) => {\r\n\t\tconsole.log(value)\r\n\t\ttimerId = setInterval(() => {\r\n            this.setState({\r\n                noti_flag : false,\r\n                noti_title : \"Mark the progress😀\",\r\n\t\t\t\tnoti_page : 'http://localhost:3000/CS374-2020cc/EventInputForm/',\r\n\t\t\t\tnoti_time : value\r\n\t\t\t})\r\n\t\t\tthis.setState({\r\n\t\t\t\tnoti_flag : false\r\n\t\t\t})\r\n            }, 1000*60*value)\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\tthis.handleTimer(this.state.noti_time);\r\n\t}\r\n\r\n\tshouldComponentUpdate(nextProps,nextState){\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps,prevState){\r\n\t\tif (prevState.noti_time !== this.state.noti_time){\r\n\t\t\tthis.setState({\r\n\t\t\t\tnoti_time : this.state.noti_time\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\thandleDaily = () => {\r\n\t\tthis.setState({\r\n\t\t\tcurrentTab : \"Todo\"\r\n\t\t})\r\n\t}\r\n\r\n\thandleEvent = () => {\r\n\t\tthis.setState({\r\n\t\t\tcurrentTab : \"Event\"\r\n\t\t})\r\n\t}\r\n\r\n\thandleRecord = () => {\r\n\t\tthis.setState({\r\n\t\t\tcurrentTab : \"Record\"\r\n\t\t})\r\n\t}\r\n\r\n\thandleEventInput = () => {\r\n\t\tthis.setState({\r\n\t\t\tcurrentTab : \"EventInput\"\r\n\t\t})\r\n\t}\r\n\r\n\thandleSetting = () => {\r\n\t\tthis.setState({\r\n\t\t\tcurrentTab : \"Setting\"\r\n\t\t})\r\n\t}\r\n\r\n\tnotiChange = (selectedOption) => {\r\n\t\tclearInterval(timerId);\r\n\t\tthis.handleTimer(selectedOption.value);\r\n\t\tthis.setState({\r\n\t\t\tnoti_time: selectedOption.value,\r\n\t\t\tselected : selectedOption\r\n\t\t})\r\n\t}\r\n\r\n\thandleChange = (checked) => {\r\n\t\tthis.setState({\r\n\t\t\t alarm_flag : checked\r\n\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\tconsole.log(\"this is noti time\" + this.state.noti_time)\r\n\r\n\t\tif(this.props.data !== this.state.data){\r\n\t\t\tthis.setState({\r\n    \t\t\tdata: this.props.data\r\n    \t\t})\r\n\t\t}\r\n\t\tconsole.log(\"[mainscreen.js] this.props.currentTab\", this.props.currentTab);\r\n\t\t// console.log(this.props.data);\r\n\t\t// console.log(this.state.data);\r\n\r\n\t\tvar dailyScheduler = (\r\n            <div>\r\n                <Todo currentTab=\"Todo\" data={this.state.data} noti_time ={this.state.noti_time} isCoworker={this.props.isCoworker}/>\r\n            </div>\r\n        );\r\n        let eventScheduler = (\r\n            <div>\r\n                <Event currentTab=\"Event\" data={this.state.data}/>\r\n            </div>\r\n        );\r\n        let recordScheduler = (\r\n            <div>\r\n                <Record currentTab=\"Record\" data={this.state.data}/>\r\n            </div>\r\n\t\t);\r\n\t\tlet eventInput = (\r\n\t\t\t<div>\r\n\t\t\t\t<EventInputForm currentTab=\"EventInput\" onhandleEvent = {this.handleEvent}/>\r\n\t\t\t</div>\r\n\t\t)\r\n\t\t\r\n\r\n\r\n    return (\r\n    \t<div className=\"app\">\r\n    \t\t<div>\r\n\t     \t<div className=\"sidebar\">\r\n\t     \t\t<div className=\"logo\"></div>\r\n\t     \t\t<div className={this.state.currentTab === \"Todo\" ? 'clickedButton':'idleButton'}  onClick={this.handleDaily}>Todo</div>\r\n\t     \t\t<div className={this.state.currentTab === \"Event\" ? 'clickedButton':'idleButton'}  onClick={this.handleEvent}>Event</div>\r\n\t     \t\t{/* <div className={this.state.currentTab === \"Record\" ? 'clickedButton':'idleButton'}  onClick={this.handleRecord}>Record</div> */}\r\n\t     \t\t{/* <div className={this.state.currentTab === \"EventInput\" ? 'clickedButton':'idleButton'}  onClick={this.handleEventInput}>EventInput</div> */}\r\n\t     \t\t<div className=\"alarm\">\r\n\t\t\t\t\t<div style = {{width:'150px', color:'black'}} > <Select  placeholder = \"Select Alarm\" value={this.state.selected} onChange={this.notiChange} options={options} /> </div>\r\n                    <Switch\r\n                        checked={this.state.alarm_flag}\r\n\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\tuncheckedIcon = {false}\r\n\t\t\t\t\t\tcheckedIcon = {false}\r\n\t\t\t\t\t\toffColor = '#888'\r\n\t\t\t\t\t\tonColor = '#26CE7A'\r\n\t\t\t\t\t\theight = {20}\r\n\t\t\t\t\t\twidth = {40}\r\n\t\t\t\t\t/>\r\n                </div>\r\n\t     \t\t<div className=\"setting\" onClick={this.handleSetting}></div>\r\n\t        </div>\r\n\t        </div> \r\n \t     \t<div className=\"content\">\r\n\t\t\t\t{this.state.currentTab === \"Record\" ? recordScheduler : \r\n\t\t\t\t(this.state.currentTab === \"Event\" ? eventScheduler : dailyScheduler)}\r\n\t\t\t\t{/* (this.state.currentTab === \"EventInput\" ? eventInput : dailyScheduler))} */}\r\n\t\t\t\t<NotificationManager data={this.state.data}/>\r\n\t        </div>\r\n\t        <Coworker handler={this.props.coworkerHandler} data={this.state.data}/>\r\n\t\t\t<div>\r\n                {this.state.noti_flag&&this.state.alarm_flag ?\r\n\t\t\t\t\t<Notification \r\n\t\t\t\t\t\tnoti_title={this.state.noti_title} \r\n\t\t\t\t\t\tnoti_page={\"http://localhost:3000/CS374-2020cc/EventInputForm/\"} \r\n\t\t\t\t\t\tnoti_change={this.state.noti_change}\r\n\t\t\t\t\t\tdata = {this.props.data}/>\r\n                :(  \r\n                    null\r\n                )}\r\n            </div>\r\n   \t\t</div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Mainscreen;","import React, { Component } from 'react';\r\nimport '../header.css';\r\n\r\nclass Header extends Component {\r\n    state = {\r\n      fileonClick : true,\r\n      uploadonClick : false,\r\n      mypageonClick : false\r\n    }\r\n\r\n    handleUploadClick = () => {\r\n      this.setState({\r\n        uploadonClick : true,\r\n        fileonClick : false,\r\n        mypageonClick : false\r\n      })\r\n    }\r\n\r\n    handleFileClick = () => {\r\n      this.setState({\r\n        uploadonClick : false,\r\n        fileonClick : true,\r\n        mypageonClick : false\r\n      })\r\n    }\r\n\r\n    handleMyPageClick = () => {\r\n      this.setState({\r\n        uploadonClick : false,\r\n        fileonClick : false,\r\n        mypageonClick : true\r\n      })\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <div>\r\n          <div>\r\n              <nav class=\"header-navigation\" id=\"header-navigation\">\r\n                  <div class=\"header-container\">\r\n                      <div class=\"header-logo\">StudyWithMe</div>\r\n                      <u1 class=\"header-navigation-links\">\r\n                          <li id=\"mypage\"><a onClick = {this.handleMyPageClick}>MyPage</a></li>\r\n                      </u1>\r\n                  </div>\r\n              </nav>\r\n          </div>\r\n        </div>\r\n        \r\n      );\r\n    }\r\n}\r\n \r\nexport default Header;","import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Header from '../components/header';\r\n\r\nclass Menu extends Component {\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header></Header>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(null, null)(Menu);","import React, {Component} from 'react';\r\nimport { TodoInfo} from '..';\r\n\r\nclass TodoList extends Component {\r\n\r\n    state = {\r\n        style: {\r\n          border: '1px solid black',\r\n          padding: '25px',\r\n          margin: '15px',\r\n        },\r\n        TodoList : this.props.data\r\n      };\r\n\r\n    render() {\r\n        const { data, onUpdate, onRemove, onLikey } = this.props;\r\n        console.log(data);\r\n        return (\r\n            <div>\r\n                <ul>\r\n                {data.map(data  => (\r\n                    <TodoInfo TodoList = {this.props.data} clickID={this.props.clickID} data={data} onUpdate={onUpdate} onRemove={onRemove} onLikey={onLikey} isCoworker={this.props.isCoworker}/>\r\n                ))}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoList;","import React, { Component , Fragment} from 'react';\r\nimport { Progress, Segment, Button  } from 'semantic-ui-react';\r\nimport { IoIosCloud, IoIosCloseCircle } from \"react-icons/io\"; \r\nimport { AiFillHeart, AiOutlineHeart } from \"react-icons/ai\"; \r\nimport { RiDeleteBin6Line } from \"react-icons/ri\"; \r\nimport { FiEdit, FiSave, FiHeart, FiChevronLeft, FiChevronsLeft, FiChevronRight, FiChevronsRight } from \"react-icons/fi\"; \r\n\r\nimport '../../todo.css';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport * as firebase from \"firebase/app\";\r\nimport \"firebase/database\";\r\nimport firebaseConfig from \"../../firebaseConfig\";\r\nimport moment from \"moment\";\r\nimport TimePicker from 'react-time-picker';\r\nimport { Todo } from '../../routes';\r\nimport update from 'react-addons-update';\r\n\r\nimport { TextField } from '@material-ui/core';\r\n\r\nclass TodoInfo extends Component {\r\n    state = {\r\n        toggle: false, //is changed?\r\n        task: this.props.data.task,\r\n        duetime : this.props.data.duetime,\r\n        progress : Number(this.props.data.progress),\r\n        index : this.props.data.index,\r\n        likey : this.props.data.likey,\r\n        TodoList : this.props.TodoList,\r\n        heartFlag : false\r\n    };\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value,\r\n        });\r\n        const { toggle, task, duetime, progress, index, TodoList } = this.state;\r\n        const { data, onUpdate } = this.props;\r\n\r\n        onUpdate(data.index, { task: task, duetime : duetime, progress : e.target.value, index : index});\r\n    };\r\n    handleChange2 = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value,\r\n        });\r\n        const { toggle, task, duetime, progress, index, TodoList } = this.state;\r\n        const { data, onUpdate } = this.props;\r\n\r\n        onUpdate(data.index, { task: e.target.value, duetime : duetime, progress : progress, index : index});\r\n    };\r\n\r\n    timeChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value,\r\n        });\r\n        const { toggle, task, duetime, progress, index, TodoList } = this.state;\r\n        const { data, onUpdate } = this.props;\r\n\r\n        onUpdate(data.index, { task: task, duetime : e.target.value, progress : progress, index : index});\r\n    };\r\n    handleToggleChange = () => {\r\n        if(!this.props.isCoworker){\r\n            const { toggle, task, duetime, progress, index, TodoList } = this.state;\r\n            const { data, onUpdate } = this.props;\r\n            if (!toggle) {\r\n                this.setState({\r\n                    toggle: true,\r\n                });\r\n            } else {\r\n                onUpdate(data.index, { task: task, duetime : duetime, progress : progress, index : index});\r\n                this.setState({\r\n                    toggle: false,\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    handleRemove = () => {\r\n        const { data, onRemove } = this.props;\r\n        console.log(data.index);\r\n        onRemove(data.index);\r\n        this.setState({\r\n            toggle: false,\r\n        });\r\n    };\r\n\r\n    handleLikey = () => {\r\n        const { data, onUpdate } = this.props;\r\n        const { toggle, task, duetime, progress, index, TodoList } = this.state;\r\n\r\n        console.log(\"[todoInfo.js] likey click@@@@@@@@\");\r\n        console.log(\"[todoInfo.js] this.state.likey\", this.state.likey);\r\n        console.log(\"[todoInfo.js] data\", data);\r\n\r\n        let clickID = this.props.clickID;\r\n        let tempLikey = this.state.likey; \r\n        if (tempLikey[\"null\"] === \"1\") {\r\n            tempLikey[\"null\"] = \"0\";\r\n            tempLikey[clickID] = \"1\";\r\n            this.setState({\r\n                heartFlag : true,\r\n            })\r\n        } else {\r\n            if (tempLikey[clickID] === \"1\") {\r\n                tempLikey[clickID] = \"0\";\r\n                this.setState({\r\n                    heartFlag : false,\r\n                })\r\n            } else {\r\n                tempLikey[clickID] = \"1\";\r\n                this.setState({\r\n                    heartFlag : true,\r\n                })\r\n            }\r\n        }\r\n\r\n        onUpdate(data.index, { task: task, duetime : duetime, progress : progress, index : index, likey: this.state.likey }, true);\r\n        // this.setState({\r\n        //     toggle: false,\r\n        // });\r\n    }\r\n    \r\n    increment = () => {\r\n        if(!this.props.isCoworker){\r\n            const { data, onUpdate, onRemove } = this.props;\r\n            let newProgress = this.state.progress >= 100 ? 100 : this.state.progress + 10;\r\n            onUpdate(data.index, { task: this.state.task, duetime : this.state.duetime, progress : newProgress, index : this.state.index});\r\n            this.setState(prevState => ({\r\n                progress: newProgress\r\n            }));\r\n        }\r\n    };\r\n    incrementFull = () => {\r\n        if(!this.props.isCoworker){\r\n            const { data, onUpdate, onRemove } = this.props;\r\n            onUpdate(data.index, { task: this.state.task, duetime : this.state.duetime, progress : 100, index : this.state.index});\r\n            this.setState(prevState => ({\r\n                progress: 100\r\n            }));\r\n        }\r\n    };\r\n\r\n    decrement = () =>{\r\n        if(!this.props.isCoworker){\r\n            const { data, onUpdate, onRemove } = this.props;\r\n            let newProgress = this.state.progress - 10 <= 0 ? 0 : this.state.progress - 10\r\n            onUpdate(data.index, { task: this.state.task, duetime : this.state.duetime, progress : newProgress, index : this.state.index});\r\n            this.setState(prevState => ({\r\n                progress: newProgress\r\n            }));\r\n        }\r\n    };\r\n\r\n    decrementFull = () => {\r\n        if(!this.props.isCoworker){\r\n            const { data, onUpdate, onRemove } = this.props;\r\n            onUpdate(data.index, { task: this.state.task, duetime : this.state.duetime, progress : 0, index : this.state.index});\r\n            this.setState(prevState => ({\r\n                progress: 0\r\n            }));\r\n        }\r\n    };\r\n\r\n\r\n  render() {\r\n    const { data, onUpdate, onRemove } = this.props;\r\n    const { toggle, task, duetime, progress, index, TodoList } = this.state;\r\n    \r\n    const TimeInput2 = (\r\n        <div className=\"progressBtn\">\r\n            <TimePicker\r\n                className=\"timePickerStyle\"\r\n                onChange={this.timeChange}\r\n                value={this.state.duetime}\r\n                name=\"duetime\"\r\n                clockIcon={null}\r\n                clearIcon={null}\r\n                disableClock={true}\r\n              />\r\n        </div>\r\n    );\r\n    const TimeInput = (\r\n        <div className=\"progressBtn\">\r\n            <TextField\r\n                label=\"Duetime\"\r\n                type=\"time\"\r\n                value={this.state.duetime}\r\n                onChange={this.timeChange}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                name=\"duetime\"\r\n                size=\"medium\"\r\n            />\r\n      </div>\r\n    );\r\n\r\n    const progressInput = (\r\n        <div className=\"progressBtn\">\r\n            <FiChevronsLeft className=\"forArrow\" size=\"32\" onClick={this.decrementFull}/>  \r\n            <FiChevronLeft className=\"forArrow\" size=\"30\" onClick={this.decrement}/>  \r\n            <span label=\"Progress\" className=\"progress-percent-text\">{this.props.data.progress + \"%\"}</span>\r\n            <FiChevronRight className=\"forArrow\" size=\"30\" onClick={this.increment}/>  \r\n            <FiChevronsRight className=\"forArrow\" size=\"32\" onClick={this.incrementFull}/>  \r\n        </div>\r\n    );\r\n\r\n    const ProgressExampleAttached = (\r\n        <Fragment >\r\n            <div>\r\n                <form className=\"mainBox\">\r\n                    {this.state.toggle ? (\r\n                        <input autoFocus className=\"todo-task-input\" id=\"taskInput\" value={this.state.task} name=\"task\" placeholder=\"Task\" onChange={this.handleChange2} type='text'></input>\r\n                    ) : <span className=\"todo-task-text\" onClick={this.handleToggleChange}>{this.props.data.task === \"\" ? \"Task\" : this.props.data.task}</span>}\r\n                    <div className = \"rightBox\">\r\n                        {TimeInput}\r\n                        {progressInput}\r\n                    </div>\r\n                    <div className=\"btns\">\r\n                        {this.props.isCoworker \r\n                            ? (<div>\r\n                                {this.state.heartFlag ? (\r\n                                    <AiFillHeart size=\"32\" onClick={this.handleLikey}/>\r\n                                ): <AiOutlineHeart size=\"32\" onClick={this.handleLikey}/>}\r\n                                </div>) \r\n                            : (<div>\r\n                                <RiDeleteBin6Line size=\"32\" onClick={this.handleRemove}/>\r\n                                {this.state.heartFlag ? (\r\n                                    <AiFillHeart size=\"32\" onClick={this.handleLikey}/>\r\n                                ): <AiOutlineHeart size=\"32\" onClick={this.handleLikey}/>}\r\n                                </div>)\r\n                        }\r\n                    </div>\r\n                </form>\r\n                \r\n            </div>\r\n            \r\n        </Fragment>\r\n    );\r\n\r\n    //console.log(this.props\r\n    //console.log(progress);\r\n    //console.log(duetime);\r\n    //console.log(data.task);\r\n    //console.log(data.progress);\r\n    return (\r\n        <div className = \"todo\">\r\n            <Segment>   \r\n                {ProgressExampleAttached}\r\n                <div className=\"deleteMarginBottom\">\r\n                    {this.state.toggle ? (\r\n                            <Progress percent={this.state.progress} size='small' color='blue' progress indicating/>\r\n                        ) : <span><Progress percent={this.state.progress} size='small' color='blue' progress indicating/></span>}\r\n                </div>\r\n                \r\n            </Segment>    \r\n            \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoInfo;","import React, { Component } from 'react';\r\nimport '../../mainscreen.css';\r\nimport { Person } from '..';\r\nimport update from 'react-addons-update';\r\n\r\nimport * as firebase from \"firebase/app\";\r\nimport \"firebase/database\";\r\nimport firebaseConfig from \"../../firebaseConfig\";\r\n\r\nif(!firebase.apps.length) {\r\n    firebase.initializeApp(firebaseConfig);\r\n}\r\nconst database = firebase.database();\r\n\r\nclass Coworker extends Component {\r\n\r\n\tstate = {\r\n        teamName: this.props.data.teamName,\r\n        name: this.props.data.name,\r\n        coworkerList: [], //initial list is empty\r\n        flag: false\r\n    };\r\n\r\n    componentDidMount(){\r\n        this._getCoworker();\r\n    }\r\n\r\n    _getCoworker(){\r\n        database.ref('teamName/'+ this.state.teamName).once('value').then((snapshot) => {\r\n            var tempThis = this;\r\n            \r\n            snapshot.forEach(function(child) {\r\n                database.ref('authentication/' + child.key).once('value').then((snapshot2) => {\r\n                    const res = snapshot2.val();\r\n\r\n                    // if(tempThis.state.name !== res.name){\r\n                    tempThis.setState({\r\n                        coworkerList : update(\r\n                            tempThis.state.coworkerList, {\r\n                                $push : [{\r\n                                    id: res.id,\r\n                                    name: res.name,\r\n                                    position: \"developer\",\r\n                                    teamName: res.teamName\r\n                                }]\r\n                            }\r\n                        ),\r\n                        flag: true\r\n                    }); \r\n                })\r\n            })\r\n        })\r\n    }\r\n\r\n\r\n\trender() {\r\n        const style = {\r\n            overflowY : \"scroll\",\r\n            overflowX : \"hidden\"\r\n        }\r\n\t    return (\r\n\t\t\t<div className=\"coworker\" style={style}>\r\n\t\t\t\t{this.state.flag \r\n\t\t\t\t\t? this.state.coworkerList.map(data => (<Person progress={80} handler={this.props.handler} name={data.name} id={data.id} teamName={data.teamName} position={data.position} />))\r\n                    : ( <div/>\r\n                )}\r\n\t   \t\t</div>\r\n\t    );\r\n  \t}\r\n}\r\n\r\nexport default Coworker;","import React, { Component } from 'react';\r\nimport '../../mainscreen.css';\r\nimport { CircularProgressbar, CircularProgressbarWithChildren, buildStyles} from 'react-circular-progressbar';\r\nimport { CircularProgress } from '@material-ui/core';\r\n\r\nclass Person extends Component {\r\n\r\n\tstate = {\r\n        name : this.props.name,\r\n        position : this.props.position,\r\n        progress: this.props.progress\r\n    }\r\n\r\n    handleClicked = () => {\r\n        const data = {\r\n            name: this.props.name,\r\n            teamName: this.props.teamName,\r\n            id: this.props.id\r\n        }\r\n        this.props.handler(data);\r\n    }\r\n    \r\n\trender() {\r\n        \r\n\t    const other = (\r\n\t    \t<div className=\"profile\">\r\n                <div className=\"center\">\r\n                \t<div className=\"human_icon\"></div>\r\n                    <div className=\"text2\">{this.state.name}</div>\r\n                    <div className=\"text2\">{this.state.position}</div>\r\n                </div>\r\n            </div>\r\n\t    );\r\n\r\n        const personWithProgress = (\r\n            <div  className=\"fitContent\">\r\n                <div className=\"profile\">\r\n                    <div className=\"center\">\r\n                        <div className=\"human_icon\"></div>\r\n                        <div className=\"text2\">{this.state.name}</div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"circularProgress\">\r\n                    <CircularProgress \r\n\r\n                        variant=\"static\" \r\n                        value={this.state.progress} \r\n                        thickness={2}\r\n                        size={150}\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n\t    return (\r\n\t    \t<div onClick={this.handleClicked}>{personWithProgress}</div>\r\n\t    );\r\n  \t}\r\n}\r\n\r\nexport default Person;","import React, { Component, Fragment } from 'react';\r\nimport { Person, RecordList } from '..';\r\n\r\nclass Record extends Component {\r\n\r\n\tstate = {\r\n\t\tdata : this.props.data,\r\n\t\tRecordList : [],\r\n\t\tflag : false\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n        this._getDailyList();\r\n    }\r\n\r\n \t_getDailyList(){\r\n        // const teamName = this.state.teamName;\r\n        // const id = this.state.id;\r\n        // const today = moment().format(\"YYYYMMDD\");\r\n\r\n        // database.ref('teamName/'+ teamName + '/' + id + '/' + today).once('value').then((snapshot) => {\r\n        //     console.log(\"this outside of foreach\", this);\r\n        //     var tempThis = this;\r\n        //     // var maxIndex = 0;\r\n        //     snapshot.forEach(function(child) {\r\n        //         let res = child.val();\r\n        //         tempThis.setState({\r\n        //             RecordList : update(\r\n        //                 tempThis.state.RecordList, {\r\n        //                     $push : [{\r\n        //                         duetime : res.duetime,\r\n        //                         task : res.task,\r\n        //                         progress : res.progress,\r\n        //                         index : res.index\r\n\r\n        //                     }]\r\n        //                 }),\r\n        //             flag: true\r\n        //         });\r\n        //     })  \r\n        // })\r\n        this.setState({\r\n        \tRecordList: [{\r\n        \t\tquestion: \"how old r u?\",\r\n        \t\tanswer: \"I am 24\"\r\n        \t},\r\n        \t{\r\n        \t\tquestion: \"R u handsome?\",\r\n        \t\tanswer: \"Yes! I M\"\r\n        \t}],\r\n        \tflag: true\r\n        });\r\n\r\n    }\r\n\trender() {\r\n\t\t\r\n    return (\r\n    \t<Fragment>\r\n                <div className=\"new_signin\">\r\n                    <div className=\"title\">Record</div>\r\n                    <div className=\"myProfile\">\r\n                        <Person isMine={true} name={this.state.data.name} position=\"Developer\" />\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    {this.state.flag ? \r\n                        this.state.RecordList.map(data => (\r\n                            <RecordList question={data.question} answer={data.answer}/>\r\n                            ))\r\n                    :(\r\n                        <span>\r\n                            Loading..\r\n                        </span> \r\n                     )}\r\n                     \r\n                </div>\r\n        \r\n            </Fragment>\r\n    \t\r\n    );\r\n  }\r\n}\r\n\r\nexport default Record;","import React, { Component, Fragment } from 'react';\r\nimport { Person , EventList } from '..';\r\nimport { Segment } from 'semantic-ui-react';\r\nimport * as firebase from \"firebase/app\";\r\nimport \"firebase/database\";\r\nimport firebaseConfig from \"../../firebaseConfig\";\r\nimport '../../mainscreen.css';\r\nimport moment from \"moment\";\r\nimport update from 'react-addons-update';\r\n\r\nif(!firebase.apps.length) {\r\n    firebase.initializeApp(firebaseConfig);\r\n}\r\n\r\nconst database = firebase.database();\r\n\r\n\r\nclass Event extends Component {\r\n\r\n\tstate = {\r\n        data : this.props.data,\r\n        QuestionList : [],\r\n\t\tEventList : [],\r\n\t\tflag : false\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n        this._getDailyList();\r\n    }\r\n\r\n \t_getDailyList(){\r\n        const teamName = this.state.data.teamName;\r\n        const id = this.state.id;\r\n        const today = moment().format(\"YYYYMMDD\");\r\n        const question = \"What do you want!!!!!!!!!!!!!!\";\r\n        // database.ref('Event/'+ teamName + '/' + today).child(question).push().set({\r\n        //     id : \"aaaaaa\",\r\n        //     answer : \"bbbbbbbb\"\r\n        // });\r\n        // database.ref('Event/'+ teamName + '/' + today).child(question).push().set({\r\n        //     id : \"ccccccccc\",\r\n        //     answer : \"dddddddddd\"\r\n        // });\r\n        // database.ref('Event/'+ teamName + '/' + today).child(question).push().set({\r\n        //     id : \"eeeeeeeee\",\r\n        //     answer : \"fffffffff\"\r\n        // });\r\n        \r\n        database.ref('Event/'+ teamName + '/' + today).once('value').then((snapshot) => {\r\n            // console.log(\"this outside of foreach\", this);\r\n            var tempThis = this;\r\n            // var maxIndex = 0;\r\n            // console.log(\"outside foreach, snapshot.val()\", snapshot.val());\r\n            // this.setState({\r\n            //     EventList: [snapshot.val()]\r\n            // })\r\n            snapshot.forEach(function(child) {\r\n                let res = child.val();\r\n                let childKey = child.key;\r\n                // console.log(\"in foreach, res\", res);\r\n                // console.log(\"in foreach, childKey\", childKey);\r\n\r\n                // console.log(\"in foreach, snapshot\", snapshot);\r\n                tempThis.setState({\r\n                    EventList : update(\r\n                        tempThis.state.EventList, {\r\n                            $push : [{\r\n                                question: childKey,\r\n                                answer: res\r\n                            }]\r\n                        }),\r\n                    flag: true\r\n                });\r\n            })  \r\n            \r\n        })\r\n\r\n        // console.log(\"[event.js] database check, this.state.EventList\", this.state.EventList);\r\n\r\n\r\n    }\r\n\trender() {\r\n        const style = {\r\n            height : \"300px\",\r\n            overflowY : \"scroll\",\r\n        }\r\n\r\n        const quesitionStyle = {\r\n            position : \"relative\"\r\n        }\r\n\r\n        const returnVal = (\r\n            <Fragment>\r\n                <div className=\"new_signin\">\r\n                    <div className=\"title\">Event</div>\r\n                    <div className=\"myProfile\">\r\n                        <Person isMine={true} name={this.state.data.name} position=\"Developer\" />\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    {this.state.flag ? \r\n                        this.state.EventList.map(data => (\r\n                            <Segment style = {style} >\r\n                                <div id = \"question\" style = {quesitionStyle}>\r\n                                    [ Question ]  &nbsp; {data.question}\r\n                                </div>\r\n                                <br/>\r\n                                <div>\r\n                                <EventList answer={data.answer}/>\r\n                                </div>\r\n                            </Segment>\r\n                            ))\r\n                    :(\r\n                        <span>\r\n                            Loading..\r\n                        </span> \r\n                     )}\r\n                     \r\n                </div>\r\n        \r\n        </Fragment>\r\n        )\r\n        console.log(this.state.EventList[0]);\r\n        \r\n    return (\r\n    <div>\r\n    \t{this.state.flag? returnVal : null}\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Event;","import React, { Component } from 'react';\r\nimport '../../mainscreen.css';\r\n\r\nclass RecordList extends Component {\r\n\r\n  state = {\r\n    question: this.props.question,\r\n    answer: this.props.answer\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"recordBox\">\r\n     \t\t<div>{this.state.question}</div>  \r\n        <div>{this.state.answer}</div>  \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RecordList;","import React, { Component } from 'react';\r\nimport '../../mainscreen.css';\r\n// import update from 'react-addons-update';\r\n// import '../../mainscreen.css';\r\n\r\nclass EventList extends Component {\r\n\r\n  state = {\r\n    question: this.props.question,\r\n    answer: this.props.answer,\r\n    answerList: [],\r\n    flag: false\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getAnswerList();\r\n}\r\ngetAnswerList() {\r\n    const myanswerList = [];\r\n    Object.keys(this.state.answer).forEach(key => {\r\n        // console.log(\"[eventList.js] getAnswerList() this.state.answer[key].answer\", this.state.answer[key].answer);\r\n        // console.log(\"[eventList.js] getAnswerList() this.state.answer[key].id\", this.state.answer[key].id);\r\n        // console.log(\"[eventList.js] getAnswerList() this.state.answer[key]\", this.state.answer[key]);\r\n        myanswerList.push({answer: this.state.answer[key].answer, id: this.state.answer[key].id})\r\n    })\r\n    this.setState({\r\n        answerList: myanswerList,\r\n        flag: true\r\n    })\r\n}\r\n\r\n  render() {\r\n      const returnVal = (\r\n        <div>\r\n          <ul>\r\n          {this.state.answerList.map(data  => (\r\n              <div className = \"eventBox\">{data.answer} {data.id}</div>\r\n          ))}\r\n          </ul>\r\n        </div>\r\n      )\r\n      // console.log(\"[eventList.js] this.state.answerList\", this.state.answerList);\r\n    return (\r\n      <div>\r\n          {this.state.flag? returnVal : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EventList;","import React, { Component, Fragment } from 'react';\r\nimport { Person , EventList } from '..';\r\nimport { Segment } from 'semantic-ui-react';\r\nimport * as firebase from \"firebase/app\";\r\nimport \"firebase/database\";\r\nimport firebaseConfig from \"../../firebaseConfig\";\r\nimport '../../mainscreen.css';\r\nimport moment from \"moment\";\r\nimport update from 'react-addons-update';\r\n\r\nif(!firebase.apps.length) {\r\n    firebase.initializeApp(firebaseConfig);\r\n}\r\n\r\nconst database = firebase.database();\r\n\r\n\r\nclass EventProcess extends Component {\r\n\r\n\tstate = {\r\n        data : this.props.location.state,\r\n        QuestionList : [],\r\n\t\tEventList : [],\r\n        flag : false,\r\n        name : this.props.location.state.name,\r\n        teamName : this.props.location.state.teamName,\r\n        id : this.props.location.state.id\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n        \r\n        // if(this.props.location.state!==null) {\r\n        //     console.log(\"[event.js]\" , this.props.location.state);\r\n        //     this.setState({\r\n        //         data : this.props.location.state,\r\n        //         name : this.props.location.state.name,\r\n        //         teamName : this.props.location.teamName,\r\n        //         id : this.props.location.state.id\r\n        //     });\r\n        //     this._getDailyList();\r\n        // }\r\n        // console.log(this.state.name);\r\n        this._getDailyList();\r\n        \r\n    }\r\n\r\n \t_getDailyList(){\r\n        const teamName = this.state.teamName;\r\n        const id = this.state.id;\r\n        console.log(teamName);\r\n        console.log(id);\r\n        const today = moment().format(\"YYYYMMDD\");\r\n        const question = \"What do you want!!!!!!!!!!!!!!\";\r\n        // database.ref('Event/'+ teamName + '/' + today).child(question).push().set({\r\n        //     id : \"aaaaaa\",\r\n        //     answer : \"bbbbbbbb\"\r\n        // });\r\n        // database.ref('Event/'+ teamName + '/' + today).child(question).push().set({\r\n        //     id : \"ccccccccc\",\r\n        //     answer : \"dddddddddd\"\r\n        // });\r\n        // database.ref('Event/'+ teamName + '/' + today).child(question).push().set({\r\n        //     id : \"eeeeeeeee\",\r\n        //     answer : \"fffffffff\"\r\n        // });\r\n        \r\n        database.ref('Event/'+ teamName + '/' + today).once('value').then((snapshot) => {\r\n            // console.log(\"this outside of foreach\", this);\r\n            var tempThis = this;\r\n            snapshot.forEach(function(child) {\r\n                let res = child.val();\r\n                let childKey = child.key;\r\n                tempThis.setState({\r\n                    EventList : update(\r\n                        tempThis.state.EventList, {\r\n                            $push : [{\r\n                                question: childKey,\r\n                                answer: res\r\n                            }]\r\n                        }),\r\n                    flag: true\r\n                });\r\n            })  \r\n            \r\n        })\r\n\r\n        }\r\n        \r\n        render() {\r\n        const style = {\r\n            height : \"300px\",\r\n            overflowY : \"scroll\",\r\n        }\r\n\r\n        const quesitionStyle = {\r\n            position : \"relative\"\r\n        }\r\n\r\n        const returnVal = (\r\n            <Fragment>\r\n                <div className=\"new_signin\">\r\n                    <div className=\"title\">Event</div>\r\n                    <div className=\"myProfile\">\r\n                        <Person isMine={true} name={this.state.name} position=\"Developer\" />\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    {this.state.flag ? \r\n                        this.state.EventList.map(data => (\r\n                            <Segment style = {style} >\r\n                                <div id = \"question\" style = {quesitionStyle}>\r\n                                    [ Question ]  &nbsp; {data.question}\r\n                                </div>\r\n                                <br/>\r\n                                <div>\r\n                                <EventList answer={data.answer}/>\r\n                                </div>\r\n                            </Segment>\r\n                            ))\r\n                    :(\r\n                        <span>\r\n                            Loading..\r\n                        </span> \r\n                     )}\r\n                     \r\n                </div>\r\n        \r\n        </Fragment>\r\n        )\r\n        // console.log(this.state.EventList[0]);\r\n        \r\n    return (\r\n    <div>\r\n    \t{this.state.flag? returnVal : null}\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EventProcess;","import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport * as firebase from \"firebase/app\";\r\nimport \"firebase/database\";\r\nimport firebaseConfig from \"../../firebaseConfig\";\r\nimport moment from \"moment\";\r\nimport {Mainscreen} from '..';\r\nimport {withRouter} from 'react-router-dom';\r\nimport { createHashHistory } from 'history';\r\nexport const history = createHashHistory();\r\n\r\nif(!firebase.apps.length) {\r\n    firebase.initializeApp(firebaseConfig);\r\n}\r\n\r\nconst database = firebase.database();\r\n\r\nclass EventInputForm extends Component {\r\n  state = {\r\n    question : \"How old are you?\",\r\n    answer : \"\",\r\n    open: true,\r\n    data : {\r\n      teamName : \"2020cc\",\r\n      id : \"template97\"\r\n    },\r\n    name : \"\",\r\n    teamName : \"\"\r\n  };\r\n  \r\n  \r\n  handleClose = () => {\r\n    this.setState({\r\n      open :false\r\n    });\r\n  };\r\n\r\n  handleSubmit = () => {\r\n    console.log(window.location.href);\r\n    console.log(localStorage.getItem('name'));\r\n    console.log(localStorage.getItem('id'));\r\n    console.log(localStorage.getItem('teamName'));\r\n\r\n    console.log(\"[eventInputForm.js] handle submit function\");\r\n    // const teamName = this.state.data.teamName;\r\n    // const id = this.state.data.id;\r\n    const name = localStorage.getItem('name');\r\n    const teamName = localStorage.getItem('teamName');\r\n    const id = localStorage.getItem('id');\r\n    const today = moment().format(\"YYYYMMDD\");\r\n\r\n\r\n    database.ref('Event/' + teamName + '/' + today).child(this.state.question).push().set({\r\n      id : id,\r\n      answer : this.state.answer\r\n    })\r\n\r\n    console.log(this.state.name);\r\n    console.log(this.state.teamName);\r\n    console.log(this.props);\r\n    \r\n    this.props.history.replace({\r\n      pathname : \"/CS374-2020cc/Odot\",\r\n      state : {\r\n        name : name,\r\n        teamName : teamName,\r\n        id : id, \r\n      }\r\n    });\r\n\r\n    this.setState({\r\n      open :false\r\n    });\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    let nextState = {};\r\n    nextState[e.target.name] = e.target.value;\r\n    this.setState(nextState);\r\n    console.log(this.state.answer);\r\n  }\r\n\r\n  handleKeyDown = (e) => {\r\n    if (e.key === 'Enter') {\r\n      this.handleSubmit();\r\n    }\r\n  }\r\n  render () {\r\n      return (\r\n        <div>\r\n          <Dialog open={this.state.open} onClose={this.handleClose} aria-labelledby=\"form-dialog-title\">\r\n            <DialogTitle id=\"form-dialog-title\">Pop-Up Event </DialogTitle>\r\n            <DialogContent>\r\n              <DialogContentText>\r\n                {this.state.question}\r\n              </DialogContentText>\r\n              <TextField\r\n                autoFocus\r\n                margin=\"dense\"\r\n                id=\"answer\"\r\n                name = \"answer\"\r\n                type = \"text\"\r\n                label=\"Answer\"\r\n                type=\"text\"\r\n                onChange = {this.handleChange}\r\n                value = {this.state.answer}\r\n                onKeyPress={this.handleKeyDown}\r\n                fullWidth\r\n              />\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={this.handleClose} color=\"primary\">\r\n                Cancel\r\n              </Button>\r\n              <Button onClick={this.handleSubmit} color=\"primary\">\r\n                SUBMIT\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n        </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default EventInputForm;","import React, { Component } from \"react\";\r\nimport '../../mainscreen.css';\r\nimport WebNotification from 'react-web-notification'\r\nimport { RiContrastDrop2Line } from \"react-icons/ri\";\r\n\r\nclass Notification extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            noti_title: this.props.noti_title,\r\n            noti_page : \"http://localhost:3000/CS374-2020cc/EventInputForm/\"\r\n        }\r\n    }\r\n    \r\n    handleNoti = () => {\r\n        \r\n        window.open(\"http://localhost:3000/CS374-2020cc/EventInputForm/?name=template97\", '__self', \"\", false);\r\n    }\r\n    render(){\r\n        const options = {\r\n            body: \"Go to WebPage\",\r\n            tag : \"http://localhost:3000/CS374-2020cc/EventInputForm/\",\r\n            badge : \"\"\r\n        }\r\n        localStorage.setItem('name', this.props.data.name);\r\n        localStorage.setItem('teamName', this.props.data.teamName);\r\n        localStorage.setItem('id', this.props.data.id);\r\n\r\n        console.log(\"여기다!!!!!\");\r\n        console.log(this.props.noti_title + \"!!!!!!!!!!!!!!!!\")\r\n        return(\r\n            <WebNotification\r\n                title= {this.props.noti_title}\r\n                timeout={5000 }\r\n                onClick={this.handleNoti}\r\n                options = {options}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default Notification;","import React, { Component, Fragment } from 'react';\r\nimport { Notification } from '..';\r\nimport * as firebase from \"firebase/app\";\r\nimport \"firebase/database\";\r\nimport firebaseConfig from \"../../firebaseConfig\";\r\nimport WebNotification from 'react-web-notification'\r\nimport moment from \"moment\";\r\nimport update from 'react-addons-update';\r\n\r\nif(!firebase.apps.length) {\r\n    firebase.initializeApp(firebaseConfig);\r\n}\r\nconst database = firebase.database();\r\n\r\nclass NotificationManager extends Component {\r\n\r\n\tstate = {\r\n        data : this.props.data,\r\n        QuestionList : [],\r\n        currentTime: moment().format(\"HH:mm\"),\r\n        event_flag : false,\r\n        event_index : -1\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n        this._getDailyList();\r\n    }\r\n\r\n \t_getDailyList(){\r\n        const teamName = this.state.data.teamName;\r\n        const id = this.state.id;\r\n        const today = moment().format(\"YYYYMMDD\");\r\n        \r\n        database.ref('Event/'+ teamName + '/' + today).once('value').then((snapshot) => {\r\n            // console.log(\"this outside of foreach\", this);\r\n            var tempThis = this;\r\n\r\n            snapshot.forEach(function(child) {\r\n                let res = child.val();\r\n                let childKey = child.key;\r\n                // console.log(\"in foreach, res\", res);\r\n                // console.log(\"in foreach, childKey\", childKey);\r\n\r\n                // console.log(\"in foreach, snapshot\", snapshot);\r\n                tempThis.setState({\r\n                    QuestionList : update(\r\n                        tempThis.state.QuestionList, {\r\n                            $push : [{\r\n                                question: childKey,\r\n                                time: res.time\r\n                            }]\r\n                        }),\r\n                    flag: true\r\n                });\r\n            })  \r\n            \r\n            // this.state.QuestionList.sort(function(a,b){\r\n            //     return a.time > b.time ? -1 : 1;\r\n            // })\r\n\r\n            // console.log(\"!!\", this.state.QuestionList);\r\n        })\r\n\r\n\r\n        this._periodicTimeUpdate(60);\r\n        \r\n    }\r\n\r\n    _periodicTimeUpdate(sec){\r\n        // console.log(\"periodic call!\");\r\n        setInterval(() => {\r\n            this.setState({\r\n                currentTime: moment().format(\"HH:mm\"),\r\n                event_flag : true,\r\n                event_index : this._findAskIndex()\r\n            })\r\n            this.setState({\r\n                event_flag : false\r\n            })\r\n            }, 1000*sec)\r\n    }\r\n\r\n    _findAskIndex(){\r\n        // console.log(\"여기!!!!!!!!!!!!!\")\r\n        var result = -1;\r\n        this.state.QuestionList.forEach(function(elem, index){\r\n            // console.log(elem, index, moment().format(\"HH:MM\"));\r\n            if(elem.time === moment().format(\"HH:mm\"))\r\n                result = index;\r\n        });\r\n        // console.log(\"여기!!!!!!!\"+result)\r\n        return result;\r\n        \r\n    }\r\n\trender() {\r\n        // console.log(this.state.event_index+\"으악!!!!!!!!!!!!\")\r\n        let i = this.state.event_index\r\n        return (\r\n            <div>    \r\n            { (i !== -1) && this.state.event_flag ?\r\n            \r\n            <WebNotification\r\n            title= {this.state.QuestionList[i].question}\r\n            timeout={5000 }\r\n            onClick={ () => window.open('http://localhost:3000/CS374-2020cc/EventInputForm/', '_blank') }\r\n            />\r\n           \r\n\r\n            :(null)}\r\n            </div>\r\n        );\r\n  }\r\n}\r\n\r\nexport default NotificationManager;","import React, {Component} from 'react';\r\nimport {Authentication} from '../components';\r\nimport { createHashHistory } from 'history';\r\nexport const history = createHashHistory();\r\n\r\nclass Login extends Component {\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <Authentication mode={true}\r\n                history = {this.props.history}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","import React, {Component} from 'react';\r\nimport {Login} from '../routes';\r\n\r\nclass App2 extends Component {\r\n    render() {\r\n        let re = /(login|register)/;\r\n        let isAuth = re.test(this.props.location.pathname);\r\n \r\n      return (\r\n        <div>\r\n          {isAuth ? undefined : <Login history = {this.props.history} />}\r\n        </div>\r\n      );\r\n    }\r\n}\r\n\r\nexport default App2;","import React, { Component } from 'react';\r\nimport {Authentication} from '../components';\r\nimport '../style.css';  \r\n\r\nclass Register extends Component { \r\n    render() {\r\n        return (\r\n            <div>\r\n                <Authentication mode={false}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Register;","import React, { Component } from 'react';\r\nimport { Mainscreen } from '../components';\r\n\r\nclass Odot extends Component {\r\n\r\n  state = {\r\n    isCoworker: false,\r\n    coworkerData: \"\",\r\n  }\r\n\r\n  handleShowCoworker = (_data) => {\r\n    if (_data.id == this.props.location.state.id) {\r\n      this.setState({\r\n        isCoworker : false\r\n      })\r\n    }\r\n    else {\r\n      this.setState({\r\n        coworkerData: _data,\r\n        isCoworker: true\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    if (this.props.location.state == null) {\r\n        this.props.location.state = {\r\n          id: \"template97\",\r\n          name: \"yuz\",\r\n          teamName: \"2020cc\"\r\n        }\r\n    }\r\n    console.log(\"isCoworker:\" + this.state.isCoworker, this.state.coworkerData);\r\n    return (\r\n   \t\t<div style={{backgroundColor:\"white\"}}>\r\n        {this.state.isCoworker ?\r\n          <Mainscreen coworkerHandler={this.handleShowCoworker} data={this.state.coworkerData} isCoworker={this.state.isCoworker}/>\r\n          : <Mainscreen coworkerHandler={this.handleShowCoworker} data={this.props.location.state} isCoworker={this.state.isCoworker}/>\r\n        }\r\n    \t</div>  \r\n    );\r\n  }\r\n}\r\n\r\nexport default Odot;","import React, {Component, Fragment} from 'react';\r\nimport { Person} from '../components';\r\nimport TodoList from '../components/mainscreen/todoList';\r\nimport '../mainscreen.css';\r\nimport '../login.css';\r\nimport * as firebase from \"firebase/app\";\r\nimport \"firebase/database\";\r\nimport firebaseConfig from \"../firebaseConfig\";\r\nimport {FiSave} from \"react-icons/fi\"; \r\n\r\nimport moment from \"moment\";\r\nimport update from 'react-addons-update';\r\nimport { Icon } from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { animateScroll } from \"react-scroll\";\r\nimport WebNotification from 'react-web-notification'\r\n\r\nimport { GrAddCircle } from \"react-icons/gr\"; \r\n\r\nif(!firebase.apps.length) {\r\n    firebase.initializeApp(firebaseConfig);\r\n}\r\n\r\nconst database = firebase.database();\r\n\r\nclass Todo extends Component{\r\n\r\n    state = {\r\n        teamName : this.props.data.teamName,\r\n        name: this.props.data.name,\r\n        TodoList: [], //initial list is empty\r\n        id : this.props.data.id,\r\n        flag : false,\r\n        isSaved : false\r\n    };\r\n    \r\n    \r\n    componentDidMount() {\r\n        this.scrollToBottom();\r\n        this._getDailyList();\r\n        \r\n        // 메인스크린에 mount아닌곳에 넣기\r\n       \r\n    }\r\n\r\n    //업데이트 되고 re-render됐을 때 부르는 함수 \r\n    componentDidUpdate() {\r\n        this.scrollToBottom();\r\n    }\r\n    scrollToBottom() {\r\n        animateScroll.scrollToBottom({\r\n          containerId: \"\"\r\n        });\r\n    }  \r\n\r\n    _getDailyList(){\r\n        const teamName = this.state.teamName;\r\n        const id = this.state.id;\r\n        const today = moment().format(\"YYYYMMDD\");\r\n\r\n        database.ref('teamName/'+ teamName + '/' + id + '/' + today).once('value').then((snapshot) => {\r\n            console.log(\"this outside of foreach\", this);\r\n            var tempThis = this;\r\n            // var maxIndex = 0;\r\n            snapshot.forEach(function(child) {\r\n                let res = child.val();\r\n                tempThis.setState({\r\n                    TodoList : update(\r\n                        tempThis.state.TodoList, {\r\n                            $push : [{\r\n                                duetime : res.duetime,\r\n                                task : res.task,\r\n                                progress : res.progress,\r\n                                index : res.index,\r\n                                likey : res.likey\r\n\r\n                            }]\r\n                        }),\r\n                    flag: true,\r\n                    \r\n                });\r\n                // maxIndex++;\r\n                console.log(tempThis.state.TodoList);\r\n            })  \r\n        })\r\n    }\r\n\r\n    async handleCreate (data) {\r\n        const { TodoList } = this.state;\r\n        console.log(data);\r\n        const teamName = this.state.teamName;\r\n        const id = this.state.id;\r\n        const today = moment().format(\"YYYYMMDD\");\r\n\r\n        // console.log(\"[todo.js] CLICK!!!!!!!!!!!!!!!!\");\r\n        var idx;\r\n        const t_this = this;\r\n        await database.ref('teamName/'+ teamName + '/' + id).child(today).once('value', function(snapshot) {\r\n            // console.log(snapshot.numChildren());\r\n            if(snapshot.numChildren() > 0) {\r\n                // console.log(\"child exist\");\r\n                database.ref('teamName/'+ teamName + '/' + id).child(today).limitToLast(1).once(\"child_added\", function(child) {\r\n                        \r\n                    // console.log(\"get index\");\r\n                    // console.log(\"limit to last child\", child.numChildren(), child);\r\n                    var newPost = child.val();\r\n                    idx = newPost.index;\r\n                    console.log(\"index : \", idx);\r\n                    idx++;\r\n                    \r\n                    database.ref('teamName/'+ teamName + '/' + id).child(today).push().set({ \r\n                        duetime : \"00:00\",\r\n                        task : \"\",\r\n                        progress : \"0\",\r\n                        index : idx,\r\n                        likey: {\"null\":\"1\"}\r\n                    });\r\n\r\n                    t_this.setState({\r\n                        TodoList: TodoList.concat({\r\n                            index: idx,\r\n                            duetime : \"00:00\",\r\n                            task : \"\",\r\n                            progress : \"0\",\r\n                            likey: {\"null\":\"1\"}\r\n                            // ...data,\r\n                      }),\r\n                    });\r\n                });\r\n            } else {\r\n                // console.log('child is empty');\r\n                idx = 0;\r\n                database.ref('teamName/'+ teamName + '/' + id).child(today).push().set({ \r\n                    duetime : \"00:00\",\r\n                    task : \"\",\r\n                    progress : \"0\",\r\n                    index : 0,\r\n                    likey: {\"null\":\"1\"}\r\n                });\r\n                t_this.setState({\r\n                    TodoList: TodoList.concat({\r\n                        index: 0,\r\n                        duetime : \"00:00\",\r\n                        task : \"\",\r\n                        progress : \"0\",\r\n                        likey: {\"null\":\"1\"}\r\n                        // ...data,\r\n                  }),\r\n                });\r\n            }\r\n        })\r\n\r\n        this.setState({\r\n            isSaved: true\r\n        })\r\n    };\r\n\r\n    handleUpdate = (index, data, islikey=false) => {\r\n        console.log(index);\r\n        // console.log(data);\r\n        const { TodoList } = this.state;\r\n        const teamName = this.state.teamName;\r\n        const id = this.state.id;\r\n        const today = moment().format(\"YYYYMMDD\");\r\n\r\n        // console.log(index);\r\n        if (islikey) {\r\n            database.ref('teamName/'+ teamName + '/' + id + '/' + today).once('value').then((snapshot) => {\r\n                // var tempThis = this;\r\n                // console.log(tempThis.state.index);\r\n                snapshot.forEach(function(child) {\r\n                    let res = child.val();\r\n                    if (res.index === index) {\r\n                        console.log(\"[todoform.js] inside of the IF\");\r\n                        let childKey = child.key;\r\n                        // console.log(\"tempThis.state.progress\", tempThis.state.progress);\r\n                        database.ref('teamName/'+ teamName + '/' + id).child(today).child(childKey).update({\r\n                            duetime : data.duetime,\r\n                            task : data.task,\r\n                            progress : data.progress,\r\n                            likey : data.likey\r\n                        });\r\n                    return;\r\n                    }\r\n                })  \r\n            });\r\n        }\r\n        \r\n\r\n        this.setState({\r\n          TodoList: TodoList.map((TodoList) => {\r\n            console.log(TodoList);\r\n            if (TodoList.index === index) {\r\n            //   console.log(TodoList.index + ' / ' + index);\r\n            //   console.log(\"[todo.js update] \", TodoList);\r\n              TodoList.duetime = data.duetime;\r\n              TodoList.progress = data.progress;\r\n              TodoList.task = data.task;\r\n              TodoList.likey = data.likey;\r\n            //   console.log(\"update after : \", TodoList);\r\n              return {\r\n                index,\r\n                ...data,\r\n                TodoList\r\n                \r\n              };\r\n            }\r\n            return TodoList;\r\n          }),\r\n          isSaved: false\r\n        });\r\n    };\r\n\r\n    handleRemove = (index) => {\r\n        const teamName = this.state.teamName;\r\n        const id = this.state.id;\r\n        const today = moment().format(\"YYYYMMDD\");\r\n\r\n        console.log('handle remove id :', index);\r\n        const { TodoList } = this.state;\r\n        const t_this = this;\r\n\r\n        database.ref('teamName/'+ teamName + '/' + id + '/' + today).once('value').then((snapshot) => {\r\n            snapshot.forEach(function(child) {\r\n                let res = child.val();\r\n                console.log(index);\r\n                if (res.index === index) {\r\n                    let childKey = child.key;\r\n                    // console.log(\"[remove]\", index);\r\n                    database.ref('teamName/'+ teamName + '/' + id + '/' + today).child(childKey).remove();\r\n                    // return;\r\n                    t_this.setState({\r\n                        TodoList: TodoList.filter((data) => data.index !== index),\r\n                    }); \r\n                }\r\n            })  \r\n        });\r\n\r\n        this.setState({\r\n            isSaved: true\r\n        })        \r\n    };\r\n\r\n\r\n    handleAllSave = () => {\r\n        // console.log(data);\r\n        const { TodoList } = this.state;\r\n        const teamName = this.state.teamName;\r\n        const id = this.state.id;\r\n        const today = moment().format(\"YYYYMMDD\");\r\n\r\n        // console.log(index);\r\n    \r\n        this.state.TodoList.forEach(function(data){\r\n            database.ref('teamName/'+ teamName + '/' + id + '/' + today).once('value').then((snapshot) => {\r\n                var tempThis = this;\r\n                let index = data.index;\r\n                // console.log(tempThis.state.index);\r\n                snapshot.forEach(function(child) {\r\n                let res = child.val();\r\n                if (res.index === index) {\r\n                    let childKey = child.key;\r\n                    database.ref('teamName/'+ teamName + '/' + id).child(today).child(childKey).update({\r\n                        duetime : data.duetime,\r\n                        task : data.task,\r\n                        progress : data.progress\r\n                    });\r\n                return;\r\n                }\r\n            })   \r\n            });     \r\n        })\r\n\r\n        this.setState({\r\n            isSaved: true\r\n        })        \r\n    }\r\n    \r\n    render(){\r\n        // console.log(this.props.noti_time)\r\n        if(this.state.id !== this.props.data.id){\r\n            // console.log(\"helo\");\r\n            this.state.id = this.props.data.id;\r\n            this.state.name = this.props.data.name;\r\n            this.state.teamName = this.props.data.teamName;\r\n            this.state.TodoList = [];\r\n            this.state.flag = false;\r\n\r\n            this._getDailyList();\r\n        }\r\n\r\n        // console.log(this.state.TodoList);\r\n        return(\r\n            <Fragment>\r\n                <div className=\"new_signin\">\r\n                    <div className=\"title\">Todo</div>\r\n                    <FiSave title=\"Click to save all changes\" size=\"32\" onClick={this.handleAllSave}/>\r\n                    <div>{this.state.isSaved ? (\" All changes are saved\") : (\"\")}</div>\r\n                    <div className=\"myProfile\">\r\n                        <Person progress={80} handler={null} name={this.state.name}/>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <TodoList data = {this.state.TodoList} clickID = {this.state.id} onUpdate = {this.handleUpdate} onRemove = {this.handleRemove} isCoworker={this.props.isCoworker}/>\r\n                </div>\r\n                <div className=\"add_task\">\r\n                    {this.props.isCoworker ? null :\r\n                    (<GrAddCircle size=\"48\" color= \"blue\" title=\"Click to add a new task\" onClick={this.handleCreate.bind(this)}/>)\r\n                    }\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\nexport default Todo;\r\n","import React, { Component} from 'react';\r\nimport './App.css';\r\nimport {App2, Odot} from './routes';\r\nimport {Menu, Event, EventInputForm, EventProcess} from './components';\r\nimport {Switch, Route, BrowserRouter as Router} from \"react-router-dom\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n        <Router>\r\n          <div>\r\n            <Route exact path=\"/CS374-2020cc/\" component={App2}/>\r\n            <Switch>\r\n              <Route path=\"/CS374-2020cc/Odot\" component= {Odot}/>\r\n              <Route path=\"/CS374-2020cc/Event\" component= {Event}/>\r\n              <Route path=\"/CS374-2020cc/EventInputForm\" component= {EventInputForm}/>\r\n              <Route path=\"/CS374-2020cc/EventProcess\" component= {EventProcess}/>\r\n              <Route path=\"/CS374-2020cc/Menu\" component= {Menu}/>\r\n            </Switch>\r\n          </div>\r\n        </Router>\r\n      \r\n        \r\n    );\r\n  }\r\n}\r\n\r\nexport default App; \r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <App />\r\n    </BrowserRouter>\r\n    , document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}